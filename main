import os
import sys
import time
from playsound import playsound
import speech_recognition as sr
import subprocess
import pyttsx3
import pyautogui
import wikipedia
import logging

from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver import ActionChains


serv = Service(".\\chromedriver\\chromedriver-win64\\chromedriver.exe")
chrome_options = webdriver.ChromeOptions()
dir_path = os.getcwd()
chrome_options.add_argument(f'user-data-dir={dir_path}/selenium')
chrome_options.add_experimental_option('excludeSwitches', ['enable-logging'])
driver = webdriver.Chrome(service=serv, options=chrome_options)
driver.minimize_window()

engine = pyttsx3.init('sapi5')
voice_id = "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Speech\\Voices\\Tokens\\MSTTS_V110_enCA_LindaM"
engine.setProperty('voice', voice_id)
engine.setProperty('rate', 150)

r = sr.Recognizer() 
r.energy_threshold = 200
# r.dynamic_energy_threshold = True

logger = logging.getLogger()
logger.setLevel(logging.CRITICAL)

# bot = ChatBot(
#     'Linda',
#     storage_adapter='chatterbot.storage.SQLStorageAdapter',
#     logic_adapters=[
#         {
#             'import_path': 'chatterbot.logic.BestMatch',
#             'default_response': 'I am sorry, but I do not understand.',
#             'maximum_similarity_threshold': 0.90
#         }
#     ],
#     database_uri='sqlite:///database-chatbot.db'
# )

def speak(x):

    engine.say(x)
    engine.runAndWait()
    print(x)
    

def get_audio1():
    
    # r = sr.Recognizer() 
    # r.energy_threshold = 200
    # r.dynamic_energy_threshold = True
    
    with sr.Microphone() as source:
        audio = r.listen(source)
        said = ""

        try:
            said = r.recognize_google(audio)

        except Exception :
            pass

    return said.lower()


def get_audio2():
    
    # r = sr.Recognizer() 
    # r.energy_threshold = 200
    # r.dynamic_energy_threshold = True

    with sr.Microphone() as source:
        playsound(".\\media\\Audio\\start.mp3")
        audio = r.listen(source)
        said = ""
        playsound(".\\media\\Audio\\stop.mp3")

        try:
            said = r.recognize_google(audio)

        except Exception :
            pass

    return said.lower()


def wiki_pedia(topic):
    result = wikipedia.summary(topic, sentences = 2)
    speak(result)


def google_search(topic):
    search_str = topic.replace(" ", "+")
    driver.switch_to.new_window('tab')
    for i in range(1):
        driver.get("https://www.google.com/search?q=" + search_str + "&start=" + str(i))

    driver.maximize_window()
    driver.implicitly_wait(3)


def google_search_v(topic):
    search_str = topic.replace(" ", "+")
    driver.switch_to.new_window('tab')
    for i in range(1):
        driver.get("https://www.google.com/search?q=" + search_str + "&start=" + str(i))

    driver.maximize_window()
    driver.implicitly_wait(3)
    try:
        result1 = driver.find_element(By.XPATH, '/html/body/div[7]/div[2]/div[10]/div[1]/div[2]/div/div[2]/div[2]/div/div/div[1]/div/div[1]/div[1]/div[1]/div/div[2]/div/div[1]/div/div/div[1]')
        speak(result1.text)
    except:
        pass


def discord_user_text(username, message):
    driver.find_element(By.XPATH, '//*[@id="app-mount"]/div[2]/div/div[2]/div/div/div/div/div[1]/nav/div[1]/button').send_keys(username)
    


def play_music():
    os.startfile(r"F:\\Codes\\Shortcuts\\spotify")
    time.sleep(2)


def exit_app():
    driver.quit()
    sys.exit()


def shutdown_pc():
    os.system("shutdown /s /t 15")
    exit_app()


def restart_pc():
    os.system("shutdown /r /t 15")
    exit_app()


def sleep_pc():
    os.system("rundll32.exe powrprof.dll,SetSuspendState 0,1,0")
    exit_app()


WAKE_WORD = "hello"
print("Start")

while True:
    print("Listening")
    text = get_audio1()

    if text.count(WAKE_WORD) > 0:
        speak("yes boss?")
        
        timeout = 5
        timeout_start = time.time()

        while time.time() < timeout_start + timeout :
            text = get_audio2()
            text_list = list(text.split(" ")) 
            
            if len(text.split()) > 0 :

                # bot_response = bot.get_response(text)
                # default_response = 'I am sorry, but I do not understand.'

                # if bot_response != default_response:
                #     speak(bot_response)
                
                # else:

                OPEN_APPS = ["open", "launch"]
                for phrase in OPEN_APPS:
                    if phrase in text:
                        temp_1 = text_list[0]
                        if phrase in temp_1:
                            if "youtube" in text:
                                if "music" in text:
                                    speak("opening youtube music")
                                    os.startfile(r"F:\\Codes\\Shortcuts\\youtube music")
                                else:
                                    speak("opening youtube")
                                    driver.switch_to.new_window('tab')
                                    driver.get('https://www.youtube.com')
                                    driver.maximize_window()
                                    driver.implicitly_wait(3)
                            else:
                                str1 = " "
                                text_list.pop(0)
                                str2 = str1.join(text_list)
                                speak("opening " + str2)
                                try:    
                                    os.startfile(r"F:\\Codes\\Shortcuts\\" + str2)
                                except:
                                    pyautogui.hotkey('win', 's')
                                    time.sleep(1)
                                    pyautogui.write(str2)
                                    pyautogui.press('enter')
                        # else:
                        #     pass
                    break

                PLAY_MUSIC = ["play something", "play some music", "play music", "play some songs"]    
                for phrase in PLAY_MUSIC:
                    if phrase in text:
                        speak("okay")
                        play_music()
                        break

                WIKIPEDIA_SEARCH = ["what", "who", "when"]
                for phrase in WIKIPEDIA_SEARCH:
                    if phrase in text:
                        try:
                            speak("here's what i've found")    
                            google_search(text)
                            wiki_pedia(text)
                        except:
                            speak("here's what i've found")
                            google_search_v(text)
                        break

                GOOGLE_SEARCH = ["which", "where", "why","how", "whose"]
                for phrase in GOOGLE_SEARCH:
                    if phrase in text:
                        speak("here's what i've found")
                        google_search_v(text)
                        break

                else:
                    google_search(text)
                
                timeout += 10
                

            # else:
            #     pass

    NEXT_TRACK = ["next"]
    for phrase in NEXT_TRACK:
        if phrase in text:
            pyautogui.press('nexttrack')


    PREV_TRACK = ["previous"]
    for phrase in PREV_TRACK:
        if phrase in text:
            pyautogui.press('prevtrack', 2)
        
    
    PLAY_PAUSE = ["play", "pause"]
    for phrase in PLAY_PAUSE:
        if phrase in text:
            pyautogui.press('playpause')
        

    REPEAT_TRACK = ["repeat", "play that again", "play that track again", "play that song again"]
    for phrase in REPEAT_TRACK:
        if phrase in text:
            pyautogui.press('prevtrack')


    VOLUME_UP = ["volume up", "i can't hear", "i cannot hear", "increase volume", "increase the volume"]
    VOLUME_DOWN = ["volume down", "it's loud", "it's too loud", "decrease volume", "decrease the volume"]


    for phrase in VOLUME_UP:
        if phrase in text:
            pyautogui.press('volumeup', 5)
            while True:
                text = get_audio1()

                for phrase in VOLUME_UP:
                    if phrase in text:
                        pyautogui.press('volumeup', 5)
                
                for phrase in VOLUME_DOWN:
                    if phrase in text:
                        pyautogui.press('volumedown', 2)

                if "more" in text:
                    pyautogui.press('volumeup', 5)

                elif "little" in text:
                    pyautogui.press('volumeup', 2)
                
                else:
                    break

    
    for phrase in VOLUME_DOWN:
        if phrase in text:
            pyautogui.press('volumedown', 5)
            while True:
                text = get_audio1()

                for phrase in VOLUME_DOWN:
                    if phrase in text:
                        pyautogui.press('volumedown', 5)
                
                for phrase in VOLUME_UP:
                    if phrase in text:
                        pyautogui.press('volumeup', 2)

                if "more" in text:
                    pyautogui.press('volumedown', 5)

                elif "little" in text:
                    pyautogui.press('volumedown', 2)
                
                else:
                    break


    EXIT_APP1 = ["exit"]
    for phrase in EXIT_APP1:
        if phrase in text:
            speak("are you sure?")
            text = get_audio2()

            if "yes" in text:
                speak("okay")
                exit_app()

    SHUTDOWN_PC1 = ["shutdown"]
    for phrase in SHUTDOWN_PC1:
        if phrase in text:
            speak("are you sure you want to shutdown?")
            text = get_audio2()

            if "yes" in text:
                speak("okay")
                shutdown_pc()

    RESTART_PC1 = ["restart"]
    for phrase in RESTART_PC1:
        if phrase in text:
            speak("are you sure you want to restart?")
            text = get_audio2()

            if "yes" in text:
                speak("okay")
                restart_pc()

    SLEEP_PC1 = ["sleep"]
    for phrase in SLEEP_PC1:
        if phrase in text:
            speak("are you sure?")
            text = get_audio2()

            if "yes" in text:
                speak("okay")
                sleep_pc()



